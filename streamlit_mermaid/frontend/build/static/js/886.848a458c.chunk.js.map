{"version":3,"file":"static/js/886.848a458c.chunk.js","mappings":"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","sources":["../node_modules/mermaid/dist/chunks/mermaid.core/chunk-4BX2VUAB.mjs","../node_modules/mermaid/dist/chunks/mermaid.core/diagram-S2PKOQOG.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  selectSvgElement\n} from \"./chunk-EXTU4WIE.mjs\";\nimport {\n  populateCommonDb\n} from \"./chunk-4BX2VUAB.mjs\";\nimport {\n  cleanAndMerge\n} from \"./chunk-S3R3BYOJ.mjs\";\nimport {\n  clear,\n  configureSvgSize,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getDiagramTitle,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-ABZYJK2D.mjs\";\nimport {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/packet/db.ts\nvar DEFAULT_PACKET_CONFIG = defaultConfig_default.packet;\nvar PacketDB = class {\n  constructor() {\n    this.packet = [];\n    this.setAccTitle = setAccTitle;\n    this.getAccTitle = getAccTitle;\n    this.setDiagramTitle = setDiagramTitle;\n    this.getDiagramTitle = getDiagramTitle;\n    this.getAccDescription = getAccDescription;\n    this.setAccDescription = setAccDescription;\n  }\n  static {\n    __name(this, \"PacketDB\");\n  }\n  getConfig() {\n    const config = cleanAndMerge({\n      ...DEFAULT_PACKET_CONFIG,\n      ...getConfig().packet\n    });\n    if (config.showBits) {\n      config.paddingY += 10;\n    }\n    return config;\n  }\n  getPacket() {\n    return this.packet;\n  }\n  pushWord(word) {\n    if (word.length > 0) {\n      this.packet.push(word);\n    }\n  }\n  clear() {\n    clear();\n    this.packet = [];\n  }\n};\n\n// src/diagrams/packet/parser.ts\nimport { parse } from \"@mermaid-js/parser\";\nvar maxPacketSize = 1e4;\nvar populate = /* @__PURE__ */ __name((ast, db) => {\n  populateCommonDb(ast, db);\n  let lastBit = -1;\n  let word = [];\n  let row = 1;\n  const { bitsPerRow } = db.getConfig();\n  for (let { start, end, bits, label } of ast.blocks) {\n    if (start !== void 0 && end !== void 0 && end < start) {\n      throw new Error(`Packet block ${start} - ${end} is invalid. End must be greater than start.`);\n    }\n    start ??= lastBit + 1;\n    if (start !== lastBit + 1) {\n      throw new Error(\n        `Packet block ${start} - ${end ?? start} is not contiguous. It should start from ${lastBit + 1}.`\n      );\n    }\n    if (bits === 0) {\n      throw new Error(`Packet block ${start} is invalid. Cannot have a zero bit field.`);\n    }\n    end ??= start + (bits ?? 1) - 1;\n    bits ??= end - start + 1;\n    lastBit = end;\n    log.debug(`Packet block ${start} - ${lastBit} with label ${label}`);\n    while (word.length <= bitsPerRow + 1 && db.getPacket().length < maxPacketSize) {\n      const [block, nextBlock] = getNextFittingBlock({ start, end, bits, label }, row, bitsPerRow);\n      word.push(block);\n      if (block.end + 1 === row * bitsPerRow) {\n        db.pushWord(word);\n        word = [];\n        row++;\n      }\n      if (!nextBlock) {\n        break;\n      }\n      ({ start, end, bits, label } = nextBlock);\n    }\n  }\n  db.pushWord(word);\n}, \"populate\");\nvar getNextFittingBlock = /* @__PURE__ */ __name((block, row, bitsPerRow) => {\n  if (block.start === void 0) {\n    throw new Error(\"start should have been set during first phase\");\n  }\n  if (block.end === void 0) {\n    throw new Error(\"end should have been set during first phase\");\n  }\n  if (block.start > block.end) {\n    throw new Error(`Block start ${block.start} is greater than block end ${block.end}.`);\n  }\n  if (block.end + 1 <= row * bitsPerRow) {\n    return [block, void 0];\n  }\n  const rowEnd = row * bitsPerRow - 1;\n  const rowStart = row * bitsPerRow;\n  return [\n    {\n      start: block.start,\n      end: rowEnd,\n      label: block.label,\n      bits: rowEnd - block.start\n    },\n    {\n      start: rowStart,\n      end: block.end,\n      label: block.label,\n      bits: block.end - rowStart\n    }\n  ];\n}, \"getNextFittingBlock\");\nvar parser = {\n  // @ts-expect-error - PacketDB is not assignable to DiagramDB\n  parser: { yy: void 0 },\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"packet\", input);\n    const db = parser.parser?.yy;\n    if (!(db instanceof PacketDB)) {\n      throw new Error(\n        \"parser.parser?.yy was not a PacketDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.\"\n      );\n    }\n    log.debug(ast);\n    populate(ast, db);\n  }, \"parse\")\n};\n\n// src/diagrams/packet/renderer.ts\nvar draw = /* @__PURE__ */ __name((_text, id, _version, diagram2) => {\n  const db = diagram2.db;\n  const config = db.getConfig();\n  const { rowHeight, paddingY, bitWidth, bitsPerRow } = config;\n  const words = db.getPacket();\n  const title = db.getDiagramTitle();\n  const totalRowHeight = rowHeight + paddingY;\n  const svgHeight = totalRowHeight * (words.length + 1) - (title ? 0 : rowHeight);\n  const svgWidth = bitWidth * bitsPerRow + 2;\n  const svg = selectSvgElement(id);\n  svg.attr(\"viewbox\", `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n  for (const [word, packet] of words.entries()) {\n    drawWord(svg, packet, word, config);\n  }\n  svg.append(\"text\").text(title).attr(\"x\", svgWidth / 2).attr(\"y\", svgHeight - totalRowHeight / 2).attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").attr(\"class\", \"packetTitle\");\n}, \"draw\");\nvar drawWord = /* @__PURE__ */ __name((svg, word, rowNumber, { rowHeight, paddingX, paddingY, bitWidth, bitsPerRow, showBits }) => {\n  const group = svg.append(\"g\");\n  const wordY = rowNumber * (rowHeight + paddingY) + paddingY;\n  for (const block of word) {\n    const blockX = block.start % bitsPerRow * bitWidth + 1;\n    const width = (block.end - block.start + 1) * bitWidth - paddingX;\n    group.append(\"rect\").attr(\"x\", blockX).attr(\"y\", wordY).attr(\"width\", width).attr(\"height\", rowHeight).attr(\"class\", \"packetBlock\");\n    group.append(\"text\").attr(\"x\", blockX + width / 2).attr(\"y\", wordY + rowHeight / 2).attr(\"class\", \"packetLabel\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").text(block.label);\n    if (!showBits) {\n      continue;\n    }\n    const isSingleBlock = block.end === block.start;\n    const bitNumberY = wordY - 2;\n    group.append(\"text\").attr(\"x\", blockX + (isSingleBlock ? width / 2 : 0)).attr(\"y\", bitNumberY).attr(\"class\", \"packetByte start\").attr(\"dominant-baseline\", \"auto\").attr(\"text-anchor\", isSingleBlock ? \"middle\" : \"start\").text(block.start);\n    if (!isSingleBlock) {\n      group.append(\"text\").attr(\"x\", blockX + width).attr(\"y\", bitNumberY).attr(\"class\", \"packetByte end\").attr(\"dominant-baseline\", \"auto\").attr(\"text-anchor\", \"end\").text(block.end);\n    }\n  }\n}, \"drawWord\");\nvar renderer = { draw };\n\n// src/diagrams/packet/styles.ts\nvar defaultPacketStyleOptions = {\n  byteFontSize: \"10px\",\n  startByteColor: \"black\",\n  endByteColor: \"black\",\n  labelColor: \"black\",\n  labelFontSize: \"12px\",\n  titleColor: \"black\",\n  titleFontSize: \"14px\",\n  blockStrokeColor: \"black\",\n  blockStrokeWidth: \"1\",\n  blockFillColor: \"#efefef\"\n};\nvar styles = /* @__PURE__ */ __name(({ packet } = {}) => {\n  const options = cleanAndMerge(defaultPacketStyleOptions, packet);\n  return `\n\t.packetByte {\n\t\tfont-size: ${options.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${options.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${options.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${options.labelColor};\n\t\tfont-size: ${options.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${options.titleColor};\n\t\tfont-size: ${options.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${options.blockStrokeColor};\n\t\tstroke-width: ${options.blockStrokeWidth};\n\t\tfill: ${options.blockFillColor};\n\t}\n\t`;\n}, \"styles\");\n\n// src/diagrams/packet/diagram.ts\nvar diagram = {\n  parser,\n  get db() {\n    return new PacketDB();\n  },\n  renderer,\n  styles\n};\nexport {\n  diagram\n};\n"],"names":["populateCommonDb","ast","db","_db$setAccDescription","_db$setAccTitle","_db$setDiagramTitle","accDescr","setAccDescription","call","accTitle","setAccTitle","title","setDiagramTitle","__name","DEFAULT_PACKET_CONFIG","defaultConfig_default","packet","PacketDB","_class","_classCallCheck","this","getAccTitle","getDiagramTitle","getAccDescription","_createClass","key","value","config","cleanAndMerge","_objectSpread","getConfig","showBits","paddingY","word","length","push","clear","populate","_step","lastBit","row","bitsPerRow","_iterator","_createForOfIteratorHelper","blocks","s","n","done","_start","_end2","_bits","_bits2","_end","_step$value","start","end","bits","label","Error","concat","log","debug","getPacket","_getNextFittingBlock","getNextFittingBlock","_getNextFittingBlock2","_slicedToArray","block","nextBlock","pushWord","err","e","f","rowEnd","rowStart","parser","yy","parse","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","input","_parser$parser","wrap","_context","prev","next","sent","stop","_x","apply","arguments","draw","_text","id","_version","diagram2","rowHeight","bitWidth","words","totalRowHeight","svgHeight","svgWidth","svg","selectSvgElement","attr","configureSvgSize","useMaxWidth","_step2","_iterator2","entries","_step2$value","drawWord","append","text","rowNumber","_ref2","_step3","paddingX","group","wordY","_iterator3","blockX","width","isSingleBlock","bitNumberY","renderer","defaultPacketStyleOptions","byteFontSize","startByteColor","endByteColor","labelColor","labelFontSize","titleColor","titleFontSize","blockStrokeColor","blockStrokeWidth","blockFillColor","styles","undefined","options","diagram"],"sourceRoot":""}