{"version":3,"file":"static/js/352.b81fb67d.chunk.js","mappings":"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","sources":["../node_modules/mermaid/dist/chunks/mermaid.core/chunk-4BX2VUAB.mjs","../node_modules/mermaid/dist/chunks/mermaid.core/diagram-QEK2KX5R.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  selectSvgElement\n} from \"./chunk-EXTU4WIE.mjs\";\nimport {\n  populateCommonDb\n} from \"./chunk-4BX2VUAB.mjs\";\nimport {\n  cleanAndMerge\n} from \"./chunk-S3R3BYOJ.mjs\";\nimport {\n  clear,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getDiagramTitle,\n  getThemeVariables,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-ABZYJK2D.mjs\";\nimport {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/radar/db.ts\nvar defaultOptions = {\n  showLegend: true,\n  ticks: 5,\n  max: null,\n  min: 0,\n  graticule: \"circle\"\n};\nvar defaultRadarData = {\n  axes: [],\n  curves: [],\n  options: defaultOptions\n};\nvar data = structuredClone(defaultRadarData);\nvar DEFAULT_RADAR_CONFIG = defaultConfig_default.radar;\nvar getConfig2 = /* @__PURE__ */ __name(() => {\n  const config = cleanAndMerge({\n    ...DEFAULT_RADAR_CONFIG,\n    ...getConfig().radar\n  });\n  return config;\n}, \"getConfig\");\nvar getAxes = /* @__PURE__ */ __name(() => data.axes, \"getAxes\");\nvar getCurves = /* @__PURE__ */ __name(() => data.curves, \"getCurves\");\nvar getOptions = /* @__PURE__ */ __name(() => data.options, \"getOptions\");\nvar setAxes = /* @__PURE__ */ __name((axes) => {\n  data.axes = axes.map((axis) => {\n    return {\n      name: axis.name,\n      label: axis.label ?? axis.name\n    };\n  });\n}, \"setAxes\");\nvar setCurves = /* @__PURE__ */ __name((curves) => {\n  data.curves = curves.map((curve) => {\n    return {\n      name: curve.name,\n      label: curve.label ?? curve.name,\n      entries: computeCurveEntries(curve.entries)\n    };\n  });\n}, \"setCurves\");\nvar computeCurveEntries = /* @__PURE__ */ __name((entries) => {\n  if (entries[0].axis == void 0) {\n    return entries.map((entry) => entry.value);\n  }\n  const axes = getAxes();\n  if (axes.length === 0) {\n    throw new Error(\"Axes must be populated before curves for reference entries\");\n  }\n  return axes.map((axis) => {\n    const entry = entries.find((entry2) => entry2.axis?.$refText === axis.name);\n    if (entry === void 0) {\n      throw new Error(\"Missing entry for axis \" + axis.label);\n    }\n    return entry.value;\n  });\n}, \"computeCurveEntries\");\nvar setOptions = /* @__PURE__ */ __name((options) => {\n  const optionMap = options.reduce(\n    (acc, option) => {\n      acc[option.name] = option;\n      return acc;\n    },\n    {}\n  );\n  data.options = {\n    showLegend: optionMap.showLegend?.value ?? defaultOptions.showLegend,\n    ticks: optionMap.ticks?.value ?? defaultOptions.ticks,\n    max: optionMap.max?.value ?? defaultOptions.max,\n    min: optionMap.min?.value ?? defaultOptions.min,\n    graticule: optionMap.graticule?.value ?? defaultOptions.graticule\n  };\n}, \"setOptions\");\nvar clear2 = /* @__PURE__ */ __name(() => {\n  clear();\n  data = structuredClone(defaultRadarData);\n}, \"clear\");\nvar db = {\n  getAxes,\n  getCurves,\n  getOptions,\n  setAxes,\n  setCurves,\n  setOptions,\n  getConfig: getConfig2,\n  clear: clear2,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription\n};\n\n// src/diagrams/radar/parser.ts\nimport { parse } from \"@mermaid-js/parser\";\nvar populate = /* @__PURE__ */ __name((ast) => {\n  populateCommonDb(ast, db);\n  const { axes, curves, options } = ast;\n  db.setAxes(axes);\n  db.setCurves(curves);\n  db.setOptions(options);\n}, \"populate\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"radar\", input);\n    log.debug(ast);\n    populate(ast);\n  }, \"parse\")\n};\n\n// src/diagrams/radar/renderer.ts\nvar draw = /* @__PURE__ */ __name((_text, id, _version, diagram2) => {\n  const db2 = diagram2.db;\n  const axes = db2.getAxes();\n  const curves = db2.getCurves();\n  const options = db2.getOptions();\n  const config = db2.getConfig();\n  const title = db2.getDiagramTitle();\n  const svg = selectSvgElement(id);\n  const g = drawFrame(svg, config);\n  const maxValue = options.max ?? Math.max(...curves.map((curve) => Math.max(...curve.entries)));\n  const minValue = options.min;\n  const radius = Math.min(config.width, config.height) / 2;\n  drawGraticule(g, axes, radius, options.ticks, options.graticule);\n  drawAxes(g, axes, radius, config);\n  drawCurves(g, axes, curves, minValue, maxValue, options.graticule, config);\n  drawLegend(g, curves, options.showLegend, config);\n  g.append(\"text\").attr(\"class\", \"radarTitle\").text(title).attr(\"x\", 0).attr(\"y\", -config.height / 2 - config.marginTop);\n}, \"draw\");\nvar drawFrame = /* @__PURE__ */ __name((svg, config) => {\n  const totalWidth = config.width + config.marginLeft + config.marginRight;\n  const totalHeight = config.height + config.marginTop + config.marginBottom;\n  const center = {\n    x: config.marginLeft + config.width / 2,\n    y: config.marginTop + config.height / 2\n  };\n  svg.attr(\"viewbox\", `0 0 ${totalWidth} ${totalHeight}`).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  return svg.append(\"g\").attr(\"transform\", `translate(${center.x}, ${center.y})`);\n}, \"drawFrame\");\nvar drawGraticule = /* @__PURE__ */ __name((g, axes, radius, ticks, graticule) => {\n  if (graticule === \"circle\") {\n    for (let i = 0; i < ticks; i++) {\n      const r = radius * (i + 1) / ticks;\n      g.append(\"circle\").attr(\"r\", r).attr(\"class\", \"radarGraticule\");\n    }\n  } else if (graticule === \"polygon\") {\n    const numAxes = axes.length;\n    for (let i = 0; i < ticks; i++) {\n      const r = radius * (i + 1) / ticks;\n      const points = axes.map((_, j) => {\n        const angle = 2 * j * Math.PI / numAxes - Math.PI / 2;\n        const x = r * Math.cos(angle);\n        const y = r * Math.sin(angle);\n        return `${x},${y}`;\n      }).join(\" \");\n      g.append(\"polygon\").attr(\"points\", points).attr(\"class\", \"radarGraticule\");\n    }\n  }\n}, \"drawGraticule\");\nvar drawAxes = /* @__PURE__ */ __name((g, axes, radius, config) => {\n  const numAxes = axes.length;\n  for (let i = 0; i < numAxes; i++) {\n    const label = axes[i].label;\n    const angle = 2 * i * Math.PI / numAxes - Math.PI / 2;\n    g.append(\"line\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", radius * config.axisScaleFactor * Math.cos(angle)).attr(\"y2\", radius * config.axisScaleFactor * Math.sin(angle)).attr(\"class\", \"radarAxisLine\");\n    g.append(\"text\").text(label).attr(\"x\", radius * config.axisLabelFactor * Math.cos(angle)).attr(\"y\", radius * config.axisLabelFactor * Math.sin(angle)).attr(\"class\", \"radarAxisLabel\");\n  }\n}, \"drawAxes\");\nfunction drawCurves(g, axes, curves, minValue, maxValue, graticule, config) {\n  const numAxes = axes.length;\n  const radius = Math.min(config.width, config.height) / 2;\n  curves.forEach((curve, index) => {\n    if (curve.entries.length !== numAxes) {\n      return;\n    }\n    const points = curve.entries.map((entry, i) => {\n      const angle = 2 * Math.PI * i / numAxes - Math.PI / 2;\n      const r = relativeRadius(entry, minValue, maxValue, radius);\n      const x = r * Math.cos(angle);\n      const y = r * Math.sin(angle);\n      return { x, y };\n    });\n    if (graticule === \"circle\") {\n      g.append(\"path\").attr(\"d\", closedRoundCurve(points, config.curveTension)).attr(\"class\", `radarCurve-${index}`);\n    } else if (graticule === \"polygon\") {\n      g.append(\"polygon\").attr(\"points\", points.map((p) => `${p.x},${p.y}`).join(\" \")).attr(\"class\", `radarCurve-${index}`);\n    }\n  });\n}\n__name(drawCurves, \"drawCurves\");\nfunction relativeRadius(value, minValue, maxValue, radius) {\n  const clippedValue = Math.min(Math.max(value, minValue), maxValue);\n  return radius * (clippedValue - minValue) / (maxValue - minValue);\n}\n__name(relativeRadius, \"relativeRadius\");\nfunction closedRoundCurve(points, tension) {\n  const numPoints = points.length;\n  let d = `M${points[0].x},${points[0].y}`;\n  for (let i = 0; i < numPoints; i++) {\n    const p0 = points[(i - 1 + numPoints) % numPoints];\n    const p1 = points[i];\n    const p2 = points[(i + 1) % numPoints];\n    const p3 = points[(i + 2) % numPoints];\n    const cp1 = {\n      x: p1.x + (p2.x - p0.x) * tension,\n      y: p1.y + (p2.y - p0.y) * tension\n    };\n    const cp2 = {\n      x: p2.x - (p3.x - p1.x) * tension,\n      y: p2.y - (p3.y - p1.y) * tension\n    };\n    d += ` C${cp1.x},${cp1.y} ${cp2.x},${cp2.y} ${p2.x},${p2.y}`;\n  }\n  return `${d} Z`;\n}\n__name(closedRoundCurve, \"closedRoundCurve\");\nfunction drawLegend(g, curves, showLegend, config) {\n  if (!showLegend) {\n    return;\n  }\n  const legendX = (config.width / 2 + config.marginRight) * 3 / 4;\n  const legendY = -(config.height / 2 + config.marginTop) * 3 / 4;\n  const lineHeight = 20;\n  curves.forEach((curve, index) => {\n    const itemGroup = g.append(\"g\").attr(\"transform\", `translate(${legendX}, ${legendY + index * lineHeight})`);\n    itemGroup.append(\"rect\").attr(\"width\", 12).attr(\"height\", 12).attr(\"class\", `radarLegendBox-${index}`);\n    itemGroup.append(\"text\").attr(\"x\", 16).attr(\"y\", 0).attr(\"class\", \"radarLegendText\").text(curve.label);\n  });\n}\n__name(drawLegend, \"drawLegend\");\nvar renderer = { draw };\n\n// src/diagrams/radar/styles.ts\nvar genIndexStyles = /* @__PURE__ */ __name((themeVariables, radarOptions) => {\n  let sections = \"\";\n  for (let i = 0; i < themeVariables.THEME_COLOR_LIMIT; i++) {\n    const indexColor = themeVariables[`cScale${i}`];\n    sections += `\n\t\t.radarCurve-${i} {\n\t\t\tcolor: ${indexColor};\n\t\t\tfill: ${indexColor};\n\t\t\tfill-opacity: ${radarOptions.curveOpacity};\n\t\t\tstroke: ${indexColor};\n\t\t\tstroke-width: ${radarOptions.curveStrokeWidth};\n\t\t}\n\t\t.radarLegendBox-${i} {\n\t\t\tfill: ${indexColor};\n\t\t\tfill-opacity: ${radarOptions.curveOpacity};\n\t\t\tstroke: ${indexColor};\n\t\t}\n\t\t`;\n  }\n  return sections;\n}, \"genIndexStyles\");\nvar buildRadarStyleOptions = /* @__PURE__ */ __name((radar) => {\n  const defaultThemeVariables = getThemeVariables();\n  const currentConfig = getConfig();\n  const themeVariables = cleanAndMerge(defaultThemeVariables, currentConfig.themeVariables);\n  const radarOptions = cleanAndMerge(themeVariables.radar, radar);\n  return { themeVariables, radarOptions };\n}, \"buildRadarStyleOptions\");\nvar styles = /* @__PURE__ */ __name(({ radar } = {}) => {\n  const { themeVariables, radarOptions } = buildRadarStyleOptions(radar);\n  return `\n\t.radarTitle {\n\t\tfont-size: ${themeVariables.fontSize};\n\t\tcolor: ${themeVariables.titleColor};\n\t\tdominant-baseline: hanging;\n\t\ttext-anchor: middle;\n\t}\n\t.radarAxisLine {\n\t\tstroke: ${radarOptions.axisColor};\n\t\tstroke-width: ${radarOptions.axisStrokeWidth};\n\t}\n\t.radarAxisLabel {\n\t\tdominant-baseline: middle;\n\t\ttext-anchor: middle;\n\t\tfont-size: ${radarOptions.axisLabelFontSize}px;\n\t\tcolor: ${radarOptions.axisColor};\n\t}\n\t.radarGraticule {\n\t\tfill: ${radarOptions.graticuleColor};\n\t\tfill-opacity: ${radarOptions.graticuleOpacity};\n\t\tstroke: ${radarOptions.graticuleColor};\n\t\tstroke-width: ${radarOptions.graticuleStrokeWidth};\n\t}\n\t.radarLegendText {\n\t\ttext-anchor: start;\n\t\tfont-size: ${radarOptions.legendFontSize}px;\n\t\tdominant-baseline: hanging;\n\t}\n\t${genIndexStyles(themeVariables, radarOptions)}\n\t`;\n}, \"styles\");\n\n// src/diagrams/radar/diagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer,\n  styles\n};\nexport {\n  diagram\n};\n"],"names":["populateCommonDb","ast","db","_db$setAccDescription","_db$setAccTitle","_db$setDiagramTitle","accDescr","setAccDescription","call","accTitle","setAccTitle","title","setDiagramTitle","__name","defaultOptions","showLegend","ticks","max","min","graticule","defaultRadarData","axes","curves","options","data","structuredClone","DEFAULT_RADAR_CONFIG","defaultConfig_default","radar","getConfig2","cleanAndMerge","_objectSpread","getConfig","getAxes","getCurves","getOptions","setAxes","map","axis","_axis$label","name","label","setCurves","curve","_curve$label","entries","computeCurveEntries","entry","value","length","Error","find","entry2","_entry2$axis","$refText","setOptions","_optionMap$showLegend","_optionMap$showLegend2","_optionMap$ticks$valu","_optionMap$ticks","_optionMap$max$value","_optionMap$max","_optionMap$min$value","_optionMap$min","_optionMap$graticule$","_optionMap$graticule","optionMap","reduce","acc","option","clear","getAccTitle","getDiagramTitle","getAccDescription","populate","parser","parse","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","input","wrap","_context","prev","next","sent","log","debug","stop","_x","apply","arguments","draw","_text","id","_version","diagram2","_options$max","db2","config","svg","selectSvgElement","g","drawFrame","maxValue","Math","_toConsumableArray","minValue","radius","width","height","drawGraticule","drawAxes","drawCurves","drawLegend","append","attr","text","marginTop","totalWidth","marginLeft","marginRight","totalHeight","marginBottom","center","x","y","concat","i","r","numAxes","_loop","points","_","j","angle","PI","cos","sin","join","axisScaleFactor","axisLabelFactor","forEach","index","relativeRadius","closedRoundCurve","curveTension","p","tension","numPoints","d","p0","p1","p2","p3","cp1","cp2","legendX","legendY","itemGroup","renderer","genIndexStyles","themeVariables","radarOptions","sections","THEME_COLOR_LIMIT","indexColor","curveOpacity","curveStrokeWidth","buildRadarStyleOptions","defaultThemeVariables","getThemeVariables","currentConfig","styles","undefined","_buildRadarStyleOptio","fontSize","titleColor","axisColor","axisStrokeWidth","axisLabelFontSize","graticuleColor","graticuleOpacity","graticuleStrokeWidth","legendFontSize","diagram"],"sourceRoot":""}