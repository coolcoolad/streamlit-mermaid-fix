{"version":3,"file":"static/js/859.3ca02c47.chunk.js","mappings":"qHAKA,SAASA,EAAiBC,EAAKC,GACX,IAAAC,EAGAC,EAGHC,EANXJ,EAAIK,WACc,QAApBH,EAAAD,EAAGK,yBAAiB,IAAAJ,GAApBA,EAAAK,KAAAN,EAAuBD,EAAIK,WAEzBL,EAAIQ,WACQ,QAAdL,EAAAF,EAAGQ,mBAAW,IAAAN,GAAdA,EAAAI,KAAAN,EAAiBD,EAAIQ,WAEnBR,EAAIU,QACY,QAAlBN,EAAAH,EAAGU,uBAAe,IAAAP,GAAlBA,EAAAG,KAAAN,EAAqBD,EAAIU,OAE7B,C,iCACAE,E,QAAAA,IAAOb,EAAkB,mB,+ECPrBc,GAAsCD,EAAAA,EAAAA,KAAO,SAACE,EAAKC,EAASC,EAAYC,GAC1EH,EAAII,KAAK,QAASF,GAClB,IAAAG,EAAgCC,EAA+BN,EAAKC,GAA5DM,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OAAQC,EAACJ,EAADI,EAAGC,EAACL,EAADK,GAC1BC,EAAAA,EAAAA,IAAiBX,EAAKQ,EAAQD,EAAOJ,GACrC,IAAMS,EAAUC,EAAcJ,EAAGC,EAAGH,EAAOC,EAAQP,GACnDD,EAAII,KAAK,UAAWQ,GACpBE,EAAAA,GAAIC,MAAM,uBAADC,OAAwBJ,EAAO,mBAAAI,OAAkBf,GAC5D,GAAG,uBACCK,GAAiDR,EAAAA,EAAAA,KAAO,SAACE,EAAKC,GAAY,IAAAgB,EACtEC,GAAmB,QAAVD,EAAAjB,EAAImB,cAAM,IAAAF,OAAA,EAAVA,EAAYG,YAAa,CAAEb,MAAO,EAAGC,OAAQ,EAAGC,EAAG,EAAGC,EAAG,GACxE,MAAO,CACLH,MAAOW,EAAOX,MAAkB,EAAVN,EACtBO,OAAQU,EAAOV,OAAmB,EAAVP,EACxBQ,EAAGS,EAAOT,EACVC,EAAGQ,EAAOR,EAEd,GAAG,kCACCG,GAAgCf,EAAAA,EAAAA,KAAO,SAACW,EAAGC,EAAGH,EAAOC,EAAQP,GAC/D,MAAO,GAAPe,OAAUP,EAAIR,EAAO,KAAAe,OAAIN,EAAIT,EAAO,KAAAe,OAAIT,EAAK,KAAAS,OAAIR,EACnD,GAAG,gB,gOCMCa,GAASC,EAAA,WACX,SAAAD,KAAcE,EAAAA,EAAAA,GAAA,KAAAF,GACZG,KAAKC,MAAQ,GACbD,KAAKE,OAAyB,IAAIC,IAClCH,KAAKI,WAAa,GAClBJ,KAAKK,QAA0B,IAAIF,IACnCH,KAAK7B,YAAcA,EAAAA,GACnB6B,KAAKM,YAAcA,EAAAA,GACnBN,KAAK3B,gBAAkBA,EAAAA,GACvB2B,KAAKO,gBAAkBA,EAAAA,GACvBP,KAAKQ,kBAAoBA,EAAAA,GACzBR,KAAKhC,kBAAoBA,EAAAA,EAC3B,CA4DC,OA5DAyC,EAAAA,EAAAA,GAAAZ,EAAA,EAAAa,IAAA,WAAAC,MAID,WACE,OAAOX,KAAKC,KACd,GAAC,CAAAS,IAAA,YAAAC,MACD,WAAY,IAAAC,EACJC,EAAgBC,EAAAA,GAChBC,GAAaC,EAAAA,EAAAA,MACnB,OAAOC,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACjBL,EAAcM,SACI,QADGP,EACrBG,EAAWI,eAAO,IAAAP,EAAAA,EAAI,CAAC,GAE9B,GAAC,CAAAF,IAAA,UAAAC,MACD,SAAQhB,EAAMyB,GAGK,IAAAC,GAFjBrB,KAAKC,MAAMqB,KAAK3B,GAChBK,KAAKE,OAAOqB,IAAI5B,EAAMyB,GACR,IAAVA,KACFpB,KAAKI,WAAWkB,KAAK3B,GACZ,QAAT0B,EAAArB,KAAKwB,YAAI,IAAAH,IAATrB,KAAKwB,KAAS7B,GAElB,GAAC,CAAAe,IAAA,UAAAC,MACD,WACE,MAAO,CAAEc,KAAM,GAAIC,SAAU1B,KAAKI,WACpC,GAAC,CAAAM,IAAA,WAAAC,MACD,SAASgB,EAAIC,GAAQ,IAAAC,EACbC,EAAiC,QAAvBD,EAAG7B,KAAKK,QAAQ0B,IAAIJ,UAAG,IAAAE,EAAAA,EAAI,CAAEF,GAAAA,EAAIK,OAAQ,GAAIC,WAAY,IACnED,EAASJ,EAAOM,QAAQ,OAAQ,gBAAgBA,QAAQ,KAAM,KAAKA,QAAQ,gBAAQ,KAAKC,MAAM,KAChGH,GACFA,EAAOI,SAAQ,SAACC,IACVC,EAAAA,EAAAA,IAAaD,KACD,OAAVP,QAAU,IAAVA,GAAAA,EAAYG,WACdH,EAAWG,WAAWX,KAAKe,GAE3BP,EAAWG,WAAa,CAACI,IAGf,OAAVP,QAAU,IAAVA,GAAAA,EAAYE,OACdF,EAAWE,OAAOV,KAAKe,GAEvBP,EAAWE,OAAS,CAACK,EAEzB,IAEFrC,KAAKK,QAAQkB,IAAII,EAAIG,EACvB,GAAC,CAAApB,IAAA,aAAAC,MACD,WACE,OAAOX,KAAKK,OACd,GAAC,CAAAK,IAAA,oBAAAC,MACD,SAAkB4B,GAAe,IAAAC,EAAAC,EAC/B,OAA8C,QAA9CD,EAAsC,QAAtCC,EAAOzC,KAAKK,QAAQ0B,IAAIQ,UAAc,IAAAE,OAAA,EAA/BA,EAAiCT,cAAM,IAAAQ,EAAAA,EAAI,EACpD,GAAC,CAAA9B,IAAA,QAAAC,MACD,YACE+B,EAAAA,EAAAA,MACA1C,KAAKC,MAAQ,GACbD,KAAKE,OAAyB,IAAIC,IAClCH,KAAKI,WAAa,GAClBJ,KAAKK,QAA0B,IAAIF,IACnCH,KAAKwB,UAAO,CACd,KAAC3B,CAAA,CAxEU,IAcTvB,EAAAA,EAAAA,IAAMwB,EAAO,aAAYA,GAiE7B,SAAS6C,EAAeC,GACtB,IAAKA,EAAMC,OACT,MAAO,GAET,IAAMrB,EAAO,GACPsB,EAAQ,GA8Bd,OA7BAF,EAAMR,SAAQ,SAACW,GACb,IAAMpD,EAAO,CACX8B,KAAMsB,EAAKtB,KACXC,SAAwB,SAAdqB,EAAKC,UAAkB,EAAS,IAS5C,IAPArD,EAAK4C,cAAoB,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMR,cACnB,OAAJQ,QAAI,IAAJA,GAAAA,EAAME,oBACRtD,EAAKsD,kBAAoB,CAACF,EAAKE,oBAEf,SAAdF,EAAKC,WAAkC,IAAfD,EAAKpC,QAC/BhB,EAAKgB,MAAQoC,EAAKpC,OAEbmC,EAAMD,OAAS,GAAKC,EAAMA,EAAMD,OAAS,GAAGzB,OAAS2B,EAAK3B,OAC/D0B,EAAMI,MAER,GAAqB,IAAjBJ,EAAMD,OACRrB,EAAKF,KAAK3B,OACL,CACL,IAAMwD,EAASL,EAAMA,EAAMD,OAAS,GAAGlD,KACnCwD,EAAOzB,SACTyB,EAAOzB,SAASJ,KAAK3B,GAErBwD,EAAOzB,SAAW,CAAC/B,EAEvB,CACkB,SAAdoD,EAAKC,MACPF,EAAMxB,KAAK,CAAE3B,KAAAA,EAAMyB,MAAO2B,EAAK3B,OAEnC,IACOI,CACT,EACAlD,EAAAA,EAAAA,IAAOqE,EAAgB,kBAGvB,IAAIS,GAA2B9E,EAAAA,EAAAA,KAAO,SAACZ,EAAKC,GAAO,IAAA0F,EAAAC,GACjD7F,EAAAA,EAAAA,GAAiBC,EAAKC,GACtB,IACuC4F,EADjCX,EAAQ,GAAGY,GAAAC,EAAAA,EAAAA,GACgB,QADhBJ,EACC3F,EAAIgG,mBAAW,IAAAL,EAAAA,EAAI,IAAE,IAAvC,IAAAG,EAAAnB,MAAAkB,EAAAC,EAAAG,KAAAC,MAAyC,KACAC,EAAAC,EAD9BC,EAAGR,EAAA5C,MACZ,GAAkB,sBAAdoD,EAAIC,MACNrG,EAAGsG,SAAsB,QAAdJ,EAACE,EAAIG,iBAAS,IAAAL,EAAAA,EAAI,GAAiB,QAAfC,EAAEC,EAAII,iBAAS,IAAAL,EAAAA,EAAI,GAEtD,CAAC,OAAAM,GAAAZ,EAAAa,EAAAD,EAAA,SAAAZ,EAAAc,GAAA,KACsCC,EADtCC,GAAAf,EAAAA,EAAAA,GACgC,QADhCH,EACiB5F,EAAIgG,mBAAW,IAAAJ,EAAAA,EAAI,IAAE,IAAvC,IAAAkB,EAAAnC,MAAAkC,EAAAC,EAAAb,KAAAC,MAAyC,KAA9BG,EAAGQ,EAAA5D,MACNoC,EAAOgB,EAAIhB,KACjB,GAAKA,EAAL,CAGA,IAAM3B,EAAQ2C,EAAIU,OAASC,SAASX,EAAIU,QAAU,EAC5ChD,EAAOkD,EAAY5B,GACnBf,EAASe,EAAKR,cAAgB5E,EAAGiH,kBAAkB7B,EAAKR,eAAiB,GACzEU,EAAoBjB,EAAOa,OAAS,EAAIb,EAAO6C,KAAK,UAAO,EAC3DC,EAAW,CACf1D,MAAAA,EACAK,KAAAA,EACAuB,KAAMD,EAAKiB,MACXrD,MAAOoC,EAAKpC,MACZ4B,cAAeQ,EAAKR,cACpBU,kBAAAA,GAEFL,EAAMtB,KAAKwD,EAbX,CAcF,CAAC,OAAAV,GAAAI,EAAAH,EAAAD,EAAA,SAAAI,EAAAF,GAAA,CACD,IAAMS,EAAiBpC,EAAeC,GAChCoC,GAAsC1G,EAAAA,EAAAA,KAAO,SAAC2B,EAAOmB,GAAU,IAC3C6D,EAD2CC,GAAAzB,EAAAA,EAAAA,GAChDxD,GAAK,IAAxB,IAAAiF,EAAA7C,MAAA4C,EAAAC,EAAAvB,KAAAC,MAA0B,KAAfjE,EAAIsF,EAAAtE,MACbhD,EAAGwH,QAAQxF,EAAMyB,GACbzB,EAAK+B,UAAY/B,EAAK+B,SAASmB,OAAS,GAC1CmC,EAAoBrF,EAAK+B,SAAUN,EAAQ,EAE/C,CAAC,OAAAgD,GAAAc,EAAAb,EAAAD,EAAA,SAAAc,EAAAZ,GAAA,CACH,GAAG,uBACHU,EAAoBD,EAAgB,EACtC,GAAG,YACCJ,GAA8BrG,EAAAA,EAAAA,KAAO,SAACyE,GACxC,OAAOA,EAAKtB,KAAO2D,OAAOrC,EAAKtB,MAAQ,EACzC,GAAG,eACC4D,EAAS,CAEXA,OAAQ,CAAEC,QAAI,GACdC,OAAuBjH,EAAAA,EAAAA,IAAM,eAAAkH,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOC,GAAI,IAAAC,EAAAC,EAAArI,EAAAC,EAAA,OAAA+H,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEd,OAFcF,EAAAC,KAAA,EAE/BH,EAAYR,EAAAA,GAAKU,EAAAE,KAAA,EACLJ,EAAU,UAAWF,GAAK,OAEhB,GAFtBnI,EAAGuI,EAAAG,KACT9G,EAAAA,GAAIC,MAAM,eAAgB7B,IACpBC,EAAkB,QAAhBmI,EAAGT,EAAOA,cAAM,IAAAS,OAAA,EAAbA,EAAeR,cACNzF,EAAS,CAAAoG,EAAAE,KAAA,cACrB,IAAIE,MACR,yJACD,OAEHjD,EAAS1F,EAAKC,GAAIsI,EAAAE,KAAA,iBAEyB,MAFzBF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAElB3G,EAAAA,GAAIiH,MAAM,yBAAwBN,EAAAK,IAASL,EAAAK,GAAA,yBAAAL,EAAAO,OAAA,GAAAZ,EAAA,mBAG9C,gBAAAa,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,EAhB4B,GAgB1B,UAMDC,EAAwB,GA6RxBC,EAAW,CAAEC,MA3RUxI,EAAAA,EAAAA,KAAO,SAACyI,EAAOpF,EAAIqF,EAAUC,GAAa,IAAAC,EAAAC,EAC7DC,EAAYH,EAAStJ,GACrB0J,EAASD,EAAUpG,YACnBsG,EAAoC,QAAjBJ,EAAGG,EAAO5I,eAAO,IAAAyI,EAAAA,EANhB,GAOpB9I,EAAQgJ,EAAU7G,kBAClBiB,EAAO4F,EAAUG,UACfC,GAAmBxG,EAAAA,EAAAA,MAAnBwG,eACR,GAAKhG,EAAL,CAGA,IAQIiG,EAREC,EAActJ,EAAQ,GAAK,EAC3BI,GAAMmJ,EAAAA,EAAAA,GAAiBhG,GACvB5C,EAAQsI,EAAOO,UAAYP,EAAOO,UAAYhB,EAAwB,IACtE5H,EAASqI,EAAOQ,WAAaR,EAAOQ,WAAajB,EAAwB,IACzEkB,EAAW/I,EACXgJ,EAAY/I,EAAS0I,EAC3BlJ,EAAII,KAAK,UAAW,OAAFY,OAASsI,EAAQ,KAAAtI,OAAIuI,KACvC5I,EAAAA,EAAAA,IAAiBX,EAAKuJ,EAAWD,EAAUT,EAAO1I,aAElD,IACE,IAAMqJ,EAAYX,EAAOI,aAAe,IACxC,GAAkB,SAAdO,EACFP,GAA8BnJ,EAAAA,EAAAA,KAAO,SAACqC,GAAK,MAAK,KAAMsH,EAAAA,EAAAA,KAAO,IAAPA,CAAYtH,EAAM,GAAE,oBACrE,GAAIqH,EAAUE,WAAW,MAAQF,EAAUG,SAAS,KAAM,CAC/D,IAAMC,EAAY,QAAQC,KAAKL,GACzBM,EAAeF,EAAYA,EAAU,GAAK,GAChDX,GAA8BnJ,EAAAA,EAAAA,KAAO,SAACqC,GAAK,MAAK,KAAMsH,EAAAA,EAAAA,KAAO,IAAMK,EAAbL,CAA2BtH,EAAM,GAAE,cAC3F,MAAO,GAAIqH,EAAUE,WAAW,KAAM,CACpC,IAAMK,EAAeP,EAAUQ,UAAU,GACzCf,GAA8BnJ,EAAAA,EAAAA,KAAO,SAACqC,GAAK,MAAK,KAAMsH,EAAAA,EAAAA,KAAOM,GAAgB,GAAvBN,CAA2BtH,EAAM,GAAE,cAC3F,MACE8G,GAAcQ,EAAAA,EAAAA,KAAOD,EAEzB,CAAE,MAAOzB,GACPjH,EAAAA,GAAIiH,MAAM,kCAAmCA,GAC7CkB,GAAcQ,EAAAA,EAAAA,KAAO,IACvB,CACA,IAAMQ,GAAaC,EAAAA,EAAAA,OAAeC,MAAM,CACtC,cACAnB,EAAeoB,QACfpB,EAAeqB,QACfrB,EAAesB,QACftB,EAAeuB,QACfvB,EAAewB,QACfxB,EAAeyB,QACfzB,EAAe0B,QACf1B,EAAe2B,QACf3B,EAAe4B,QACf5B,EAAe6B,QACf7B,EAAe8B,SACf9B,EAAe+B,WAEXC,GAAiBd,EAAAA,EAAAA,OAAeC,MAAM,CAC1C,cACAnB,EAAeiC,YACfjC,EAAekC,YACflC,EAAemC,YACfnC,EAAeoC,YACfpC,EAAeqC,YACfrC,EAAesC,YACftC,EAAeuC,YACfvC,EAAewC,YACfxC,EAAeyC,YACfzC,EAAe0C,YACf1C,EAAe2C,aACf3C,EAAe4C,eAEXC,GAAkB3B,EAAAA,EAAAA,OAAeC,MAAM,CAC3CnB,EAAe8C,aACf9C,EAAe+C,aACf/C,EAAegD,aACfhD,EAAeiD,aACfjD,EAAekD,aACflD,EAAemD,aACfnD,EAAeoD,aACfpD,EAAeqD,aACfrD,EAAesD,aACftD,EAAeuD,aACfvD,EAAewD,cACfxD,EAAeyD,gBAEb7M,GACFI,EAAI0M,OAAO,QAAQtM,KAAK,IAAKkJ,EAAW,GAAGlJ,KAAK,IAAK8I,EAAc,GAAG9I,KAAK,QAAS,gBAAgBA,KAAK,cAAe,UAAUA,KAAK,oBAAqB,UAAUiH,KAAKzH,GAE7K,IAAM+M,EAAI3M,EAAI0M,OAAO,KAAKtM,KAAK,YAAa,gBAAFY,OAAkBkI,EAAW,MAAK9I,KAAK,QAAS,oBACpFwM,GAAgBC,EAAAA,EAAAA,KAAU7J,GAAM8J,KAAI,SAACC,GAAC,IAAAC,EAAA,OAAY,QAAZA,EAAKD,EAAE5K,aAAK,IAAA6K,EAAAA,EAAI,CAAC,IAAEC,MAAK,SAACC,EAAGC,GAAC,IAAAC,EAAAC,EAAA,OAAa,QAARD,EAACD,EAAEhL,aAAK,IAAAiL,EAAAA,EAAI,IAAa,QAAZC,EAAKH,EAAE/K,aAAK,IAAAkL,EAAAA,EAAI,EAAE,IAIvGC,GAHgB3K,EAAAA,EAAAA,OAAU4K,KAAK,CAAChN,EAAOC,IAASgN,YACpD,SAACT,GAAC,OAAKA,EAAE7J,UAAY6J,EAAE7J,SAASmB,OAAS,EAAIoJ,GAAgD,CAAC,IAC9FC,aAAa5E,GAAqB6E,aAAY,SAACZ,GAAC,OAAKA,EAAE7J,UAAY6J,EAAE7J,SAASmB,OAAS,EAAI+D,EAAwB,CAAC,IAAEwF,cAAa,SAACb,GAAC,OAAKA,EAAE7J,UAAY6J,EAAE7J,SAASmB,OAAS,EAAI+D,EAAwB,CAAC,IAAEyF,eAAc,SAACd,GAAC,OAAKA,EAAE7J,UAAY6J,EAAE7J,SAASmB,OAAS,EAAI+D,EAAwB,CAAC,IAAE0F,OAAM,EACrRC,CAAcnB,GAC5BoB,EAAcV,EAAYW,cAAcC,QAAO,SAACnB,GAAC,OAAKA,EAAE7J,UAAY6J,EAAE7J,SAASmB,OAAS,CAAC,IACzF8J,EAAWxB,EAAEyB,UAAU,mBAAmBC,KAAKL,GAAaM,QAAQ5B,OAAO,KAAKtM,KAAK,QAAS,kBAAkBA,KAAK,aAAa,SAAC2M,GAAC,mBAAA/L,OAAkB+L,EAAEwB,GAAE,KAAAvN,OAAI+L,EAAEyB,GAAE,QACxKL,EAASzB,OAAO,QAAQtM,KAAK,SAAS,SAAC2M,GAAC,OAAKA,EAAE0B,GAAK1B,EAAEwB,EAAE,IAAEnO,KAAK,SA7FrC,IA6FsEA,KAAK,QAAS,wBAAwBA,KAAK,OAAQ,QAAQA,KAAK,eAAgB,IAAKA,KAAK,eAAgB,IAAKA,KAAK,SAAS,SAAC2M,GAC5N,OAAgB,IAAZA,EAAE2B,MACG,iBAEF,EACT,IACAP,EAASzB,OAAO,YAAYtM,KAAK,MAAM,SAACuO,EAAIC,GAAC,sBAAA5N,OAAqBmC,EAAE,KAAAnC,OAAI4N,EAAC,IAAIlC,OAAO,QAAQtM,KAAK,SAAS,SAAC2M,GAAC,OAAK8B,KAAKC,IAAI,EAAG/B,EAAE0B,GAAK1B,EAAEwB,GAAK,GAAG,IAAEnO,KAAK,SAnG3H,IAoG1B+N,EAASzB,OAAO,QAAQtM,KAAK,SAAS,SAAC2M,GAAC,OAAKA,EAAE0B,GAAK1B,EAAEwB,EAAE,IAAEnO,KAAK,UAAU,SAAC2M,GAAC,OAAKA,EAAEgC,GAAKhC,EAAEyB,EAAE,IAAEpO,KAAK,SAAS,SAACuO,EAAIC,GAC9G,MAAO,yBAAP5N,OAAgC4N,EAClC,IAAGxO,KAAK,QAAQ,SAAC2M,GAAC,OAAK9C,EAAW8C,EAAEsB,KAAKpL,KAAK,IAAE7C,KAAK,eAAgB,IAAKA,KAAK,UAAU,SAAC2M,GAAC,OAAK/B,EAAe+B,EAAEsB,KAAKpL,KAAK,IAAE7C,KAAK,eAAgB,GAAGA,KAAK,iBAAkB,IAAKA,KAAK,SAAS,SAAC2M,GAC9L,GAAgB,IAAZA,EAAE2B,MACJ,MAAO,iBAET,IAAMlL,GAASwL,EAAAA,EAAAA,IAAc,CAAEvK,kBAAmBsI,EAAEsB,KAAK5J,oBACzD,OAAOjB,EAAOyL,WAAa,IAAMzL,EAAO0L,aAAa7I,KAAK,IAC5D,IACA8H,EAASzB,OAAO,QAAQtM,KAAK,QAAS,uBAAuBA,KAAK,IAAK,GAAGA,KAAK,IAAKqN,MAA2BrN,KAAK,oBAAqB,UAAUiH,MAAK,SAAC0F,GAAC,OAAiB,IAAZA,EAAE2B,MAAc,GAAK3B,EAAEsB,KAAKpL,IAAI,IAAE7C,KAAK,cAAe,QAAQA,KAAK,SAAS,SAAC2M,GAC1O,OAAgB,IAAZA,EAAE2B,MACG,iBAEW,oDAAsD7C,EAAgBkB,EAAEsB,KAAKpL,MAAQ,qEAC1F+L,EAAAA,EAAAA,IAAc,CAAEvK,kBAAmBsI,EAAEsB,KAAK5J,oBAC7B0K,YAAYzL,QAAQ,SAAU,QAC5D,IAAG0L,MAAK,SAASrC,GACf,GAAgB,IAAZA,EAAE2B,MAAN,CAGA,IAAMW,GAAOC,EAAAA,EAAAA,IAAO9N,MACd+N,EAAexC,EAAEsB,KAAKpL,KAC5BoM,EAAKhI,KAAKkI,GACV,IAEIC,EAFEC,EAAmB1C,EAAE0B,GAAK1B,EAAEwB,GAGlC,IAA0B,IAAtB1F,EAAO6G,YAAwB3C,EAAE5K,MAAO,CAK1CqN,EAJ6BC,EAAmB,GACV,GACN,GALX,CAQvB,KAAO,CAELD,EAAsBC,EAVD,EASQ,CAE/B,CACA,IACME,EAAuBd,KAAKC,IADJ,GAC+BU,GACvDI,EAAWP,EAAKlO,OAEtB,GADiCyO,EAASC,wBACXF,EAG7B,IAFA,IACIG,EAAuBP,EACpBO,EAAqBzL,OAAS,GAAG,CAEtC,GAAoC,KADpCyL,EAAuBP,EAAavF,UAAU,EAAG8F,EAAqBzL,OAAS,IACtDA,OAAc,CACrCgL,EAAKhI,KALQ,OAMTuI,EAASC,wBAA0BF,GACrCN,EAAKhI,KAAK,IAEZ,KACF,CAEA,GADAgI,EAAKhI,KAAKyI,EAXK,OAYXF,EAASC,yBAA2BF,EACtC,KAEJ,CArCF,CAuCF,KAC0B,IAAtB9G,EAAO6G,YACTvB,EAASzB,OAAO,QAAQtM,KAAK,QAAS,uBAAuBA,KAAK,KAAK,SAAC2M,GAAC,OAAKA,EAAE0B,GAAK1B,EAAEwB,GAAK,EAAE,IAAEnO,KAAK,IAAKqN,MAA2BrN,KAAK,cAAe,OAAOA,KAAK,oBAAqB,UAAUiH,MAAK,SAAC0F,GAAC,OAAKA,EAAE5K,MAAQ8G,EAAY8D,EAAE5K,OAAS,EAAE,IAAE/B,KAAK,aAAc,UAAUA,KAAK,SAAS,SAAC2M,GAC/R,OAAgB,IAAZA,EAAE2B,MACG,iBAEW,sEAAwE7C,EAAgBkB,EAAEsB,KAAKpL,MAAQ,qEAC5G+L,EAAAA,EAAAA,IAAc,CAAEvK,kBAAmBsI,EAAEsB,KAAK5J,oBAC7B0K,YAAYzL,QAAQ,SAAU,QAC5D,IAEF,IAAMqM,EAAYzC,EAAY0C,SACxBC,EAAOtD,EAAEyB,UAAU,qBAAqBC,KAAK0B,GAAWzB,QAAQ5B,OAAO,KAAKtM,KAAK,SAAS,SAAC2M,EAAG6B,GAClG,MAAO,oCAAP5N,OAA2C4N,GAAC5N,OAAG+L,EAAEsB,KAAKtK,cAAgB,IAAH/C,OAAO+L,EAAEsB,KAAKtK,eAAkB,GAAE,IACvG,IAAG3D,KAAK,aAAa,SAAC2M,GAAC,mBAAA/L,OAAkB+L,EAAEwB,GAAE,KAAAvN,OAAI+L,EAAEyB,GAAE,QA6DrD,GA5DAyB,EAAKvD,OAAO,QAAQtM,KAAK,SAAS,SAAC2M,GAAC,OAAKA,EAAE0B,GAAK1B,EAAEwB,EAAE,IAAEnO,KAAK,UAAU,SAAC2M,GAAC,OAAKA,EAAEgC,GAAKhC,EAAEyB,EAAE,IAAEpO,KAAK,QAAS,eAAeA,KAAK,QAAQ,SAAC2M,GAClI,OAAOA,EAAEpI,OAASsF,EAAW8C,EAAEpI,OAAO0J,KAAKpL,MAAQgH,EAAW8C,EAAEsB,KAAKpL,KACvE,IAAG7C,KAAK,SAAS,SAAC2M,GAEhB,OADeiC,EAAAA,EAAAA,IAAc,CAAEvK,kBAAmBsI,EAAEsB,KAAK5J,oBAC3CwK,UAChB,IAAG7O,KAAK,eAAgB,IAAKA,KAAK,UAAU,SAAC2M,GAC3C,OAAOA,EAAEpI,OAASsF,EAAW8C,EAAEpI,OAAO0J,KAAKpL,MAAQgH,EAAW8C,EAAEsB,KAAKpL,KACvE,IAAG7C,KAAK,eAAgB,GACxB6P,EAAKvD,OAAO,YAAYtM,KAAK,MAAM,SAACuO,EAAIC,GAAC,cAAA5N,OAAamC,EAAE,KAAAnC,OAAI4N,EAAC,IAAIlC,OAAO,QAAQtM,KAAK,SAAS,SAAC2M,GAAC,OAAK8B,KAAKC,IAAI,EAAG/B,EAAE0B,GAAK1B,EAAEwB,GAAK,EAAE,IAAEnO,KAAK,UAAU,SAAC2M,GAAC,OAAK8B,KAAKC,IAAI,EAAG/B,EAAEgC,GAAKhC,EAAEyB,GAAK,EAAE,IAClKyB,EAAKvD,OAAO,QAAQtM,KAAK,QAAS,gBAAgBA,KAAK,KAAK,SAAC2M,GAAC,OAAMA,EAAE0B,GAAK1B,EAAEwB,IAAM,CAAC,IAAEnO,KAAK,KAAK,SAAC2M,GAAC,OAAMA,EAAEgC,GAAKhC,EAAEyB,IAAM,CAAC,IAAEpO,KAAK,SAAS,SAAC2M,GAG1J,MAFoB,wEAA0ElB,EAAgBkB,EAAEsB,KAAKpL,MAAQ,KAC9G+L,EAAAA,EAAAA,IAAc,CAAEvK,kBAAmBsI,EAAEsB,KAAK5J,oBAC7B0K,YAAYzL,QAAQ,SAAU,QAC5D,IAAGtD,KAAK,aAAa,SAACuO,EAAIC,GAAC,mBAAA5N,OAAkBmC,EAAE,KAAAnC,OAAI4N,EAAC,QAAKvH,MAAK,SAAC0F,GAAC,OAAKA,EAAEsB,KAAKpL,IAAI,IACrEmM,MAAK,SAASrC,GACvB,IAAMsC,GAAOC,EAAAA,EAAAA,IAAO9N,MACd4H,EAAY2D,EAAE0B,GAAK1B,EAAEwB,GACrBlF,EAAa0D,EAAEgC,GAAKhC,EAAEyB,GACtBoB,EAAWP,EAAKlO,OAEhB+O,EAAiB9G,EAAY,EAC7B+G,EAAkB9G,EAAa,EACrC,GAAI6G,EAAiB,IAAMC,EAAkB,GAC3Cd,EAAKe,MAAM,UAAW,YADxB,CAUA,IANA,IAAIC,EAAuBnK,SAASmJ,EAAKe,MAAM,aAAc,IAMtDR,EAASC,wBAA0BK,GAAkBG,EALnC,GAMvBA,IACAhB,EAAKe,MAAM,YAAa,GAAFpP,OAAKqP,EAAoB,OAOjD,IALA,IAAIC,EAA2BzB,KAAKC,IANX,EAQvBD,KAAK0B,IAV0B,GAUI1B,KAAKf,MATjB,GASuBuC,KAE5CG,EAAiBH,EATe,EASsCC,EACnEE,EAAiBL,GAAmBE,EAdlB,IAevBA,OACAC,EAA2BzB,KAAKC,IAbT,EAerBD,KAAK0B,IAjBwB,GAiBM1B,KAAKf,MAhBnB,GAgByBuC,MAfzB,GAHA,IAoB4BA,KAGnDhB,EAAKe,MAAM,YAAa,GAAFpP,OAAKqP,EAAoB,OAC/CG,EAAiBH,EApBiB,EAoBoCC,EAIxEjB,EAAKe,MAAM,YAAa,GAAFpP,OAAKqP,EAAoB,QAC3CT,EAASC,wBAA0BK,GAAkBG,EA7BhC,GA6B2EF,EAAkBE,IACpHhB,EAAKe,MAAM,UAAW,OAhCxB,CAkCF,KAC0B,IAAtBvH,EAAO6G,WACUO,EAAKvD,OAAO,QAAQtM,KAAK,QAAS,gBAAgBA,KAAK,KAAK,SAAC2M,GAAC,OAAMA,EAAE0B,GAAK1B,EAAEwB,IAAM,CAAC,IAAEnO,KAAK,KAAK,SAAS2M,GAC1H,OAAQA,EAAEgC,GAAKhC,EAAEyB,IAAM,CACzB,IAAGpO,KAAK,SAAS,SAAC2M,GAGhB,MAFoB,yEAA2ElB,EAAgBkB,EAAEsB,KAAKpL,MAAQ,KAC/G+L,EAAAA,EAAAA,IAAc,CAAEvK,kBAAmBsI,EAAEsB,KAAK5J,oBAC7B0K,YAAYzL,QAAQ,SAAU,QAC5D,IAAGtD,KAAK,aAAa,SAACuO,EAAIC,GAAC,mBAAA5N,OAAkBmC,EAAE,KAAAnC,OAAI4N,EAAC,QAAKvH,MAAK,SAAC0F,GAAC,OAAKA,EAAE5K,MAAQ8G,EAAY8D,EAAE5K,OAAS,EAAE,IAC7FiN,MAAK,SAASrC,GACvB,IAAM0D,GAAmBnB,EAAAA,EAAAA,IAAO9N,MAC1BkP,EAAiBlP,KAAKmP,WAC5B,GAAKD,EAAL,CAIA,IAAME,GAAetB,EAAAA,EAAAA,IAAOoB,GAAgBpB,OAAO,iBACnD,GAAIsB,EAAaC,SAA6C,SAAlCD,EAAaR,MAAM,WAC7CK,EAAiBL,MAAM,UAAW,YADpC,CAIA,IAAMU,EAAqBC,WAAWH,EAAaR,MAAM,cAKnDY,EAAsBnC,KAAKC,IAFR,EAIvBD,KAAK0B,IANuB,GAMI1B,KAAKf,MALd,GAKoBgD,KAE7CL,EAAiBL,MAAM,YAAa,GAAFpP,OAAKgQ,EAAmB,OAC1D,IACMC,GADgBlE,EAAEgC,GAAKhC,EAAEyB,IAAM,EACEsC,EAAqB,EAPxB,EAQpCL,EAAiBrQ,KAAK,IAAK6Q,GAC3B,IAAM7H,EAAY2D,EAAE0B,GAAK1B,EAAEwB,GAGrB2C,EAFkBnE,EAAEgC,GAAKhC,EAAEyB,GACP,EAEpB2C,EAAyB/H,EAAY,EACvCqH,EAAiBtP,OAAO0O,wBAA0BsB,GAA0BF,EAAkBD,EAAsBE,GAAmBF,EAflH,EAgBvBP,EAAiBL,MAAM,UAAW,QAElCK,EAAiBL,MAAM,UAAW,KAtBpC,CALA,MAFEK,EAAiBL,MAAM,UAAW,OA+BtC,IAEF,IAAMgB,EAAsC,QAAxBzI,EAAGE,EAAOuI,sBAAc,IAAAzI,EAAAA,EAAI,GAChD5I,EAAAA,EAAAA,GAAoBC,EAAKoR,EAAgB,aAAmB,OAANvI,QAAM,IAANA,OAAM,EAANA,EAAQ1I,eAAe,EA7Q7E,CA8QF,GAAG,QAIoBkR,YAHUvR,EAAAA,EAAAA,KAAO,SAASyI,EAAO+I,GACtD,OAAOA,EAAWnS,GAAGkS,YACvB,GAAG,eAICE,EAA6B,CAC/BC,mBAAoB,QACpBC,mBAAoB,IACpBC,iBAAkB,UAClBC,gBAAiB,QACjBC,gBAAiB,IACjBC,cAAe,UACfC,WAAY,QACZC,cAAe,OACfC,cAAe,OACfC,WAAY,QACZC,WAAY,QACZC,cAAe,QAEbC,GAA4BtS,EAAAA,EAAAA,KAAO,WAE5B,IADAuS,GACAlK,UAAA9D,OAAA,QAAAiO,IAAAnK,UAAA,GAAAA,UAAA,GAAP,CAAC,GADHxF,QAEM4P,GAAU9P,EAAAA,EAAAA,IAAc8O,EAA4Bc,GAC1D,MAAO,2CAAPrR,OAEYuR,EAAQf,mBAAkB,yBAAAxQ,OACpBuR,EAAQd,mBAAkB,iBAAAzQ,OAClCuR,EAAQb,iBAAgB,+CAAA1Q,OAGtBuR,EAAQZ,gBAAe,yBAAA3Q,OACjBuR,EAAQX,gBAAe,iBAAA5Q,OAC/BuR,EAAQV,cAAa,yCAAA7Q,OAGrBuR,EAAQT,WAAU,sBAAA9Q,OACbuR,EAAQR,cAAa,yCAAA/Q,OAG1BuR,EAAQN,WAAU,sBAAAjR,OACbuR,EAAQP,cAAa,yCAAAhR,OAG1BuR,EAAQL,WAAU,sBAAAlR,OACbuR,EAAQJ,cAAa,aAGtC,GAAG,aAICK,EAAU,CACZ3L,OAAAA,EACI1H,SACF,OAAO,IAAIkC,CACb,EACAgH,SAAAA,EACA7E,OATmB4O,E","sources":["../node_modules/mermaid/dist/chunks/mermaid.core/chunk-4BX2VUAB.mjs","../node_modules/mermaid/dist/chunks/mermaid.core/chunk-QN33PNHL.mjs","../node_modules/mermaid/dist/chunks/mermaid.core/diagram-PSM6KHXK.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  configureSvgSize\n} from \"./chunk-ABZYJK2D.mjs\";\nimport {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/rendering-util/setupViewPortForSVG.ts\nvar setupViewPortForSVG = /* @__PURE__ */ __name((svg, padding, cssDiagram, useMaxWidth) => {\n  svg.attr(\"class\", cssDiagram);\n  const { width, height, x, y } = calculateDimensionsWithPadding(svg, padding);\n  configureSvgSize(svg, height, width, useMaxWidth);\n  const viewBox = createViewBox(x, y, width, height, padding);\n  svg.attr(\"viewBox\", viewBox);\n  log.debug(`viewBox configured: ${viewBox} with padding: ${padding}`);\n}, \"setupViewPortForSVG\");\nvar calculateDimensionsWithPadding = /* @__PURE__ */ __name((svg, padding) => {\n  const bounds = svg.node()?.getBBox() || { width: 0, height: 0, x: 0, y: 0 };\n  return {\n    width: bounds.width + padding * 2,\n    height: bounds.height + padding * 2,\n    x: bounds.x,\n    y: bounds.y\n  };\n}, \"calculateDimensionsWithPadding\");\nvar createViewBox = /* @__PURE__ */ __name((x, y, width, height, padding) => {\n  return `${x - padding} ${y - padding} ${width} ${height}`;\n}, \"createViewBox\");\n\nexport {\n  setupViewPortForSVG\n};\n","import {\n  selectSvgElement\n} from \"./chunk-EXTU4WIE.mjs\";\nimport {\n  setupViewPortForSVG\n} from \"./chunk-QN33PNHL.mjs\";\nimport {\n  isLabelStyle,\n  styles2String\n} from \"./chunk-ATLVNIR6.mjs\";\nimport {\n  populateCommonDb\n} from \"./chunk-4BX2VUAB.mjs\";\nimport {\n  cleanAndMerge\n} from \"./chunk-S3R3BYOJ.mjs\";\nimport {\n  clear,\n  configureSvgSize,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getDiagramTitle,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-ABZYJK2D.mjs\";\nimport {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/treemap/db.ts\nvar TreeMapDB = class {\n  constructor() {\n    this.nodes = [];\n    this.levels = /* @__PURE__ */ new Map();\n    this.outerNodes = [];\n    this.classes = /* @__PURE__ */ new Map();\n    this.setAccTitle = setAccTitle;\n    this.getAccTitle = getAccTitle;\n    this.setDiagramTitle = setDiagramTitle;\n    this.getDiagramTitle = getDiagramTitle;\n    this.getAccDescription = getAccDescription;\n    this.setAccDescription = setAccDescription;\n  }\n  static {\n    __name(this, \"TreeMapDB\");\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  getConfig() {\n    const defaultConfig = defaultConfig_default;\n    const userConfig = getConfig();\n    return cleanAndMerge({\n      ...defaultConfig.treemap,\n      ...userConfig.treemap ?? {}\n    });\n  }\n  addNode(node, level) {\n    this.nodes.push(node);\n    this.levels.set(node, level);\n    if (level === 0) {\n      this.outerNodes.push(node);\n      this.root ??= node;\n    }\n  }\n  getRoot() {\n    return { name: \"\", children: this.outerNodes };\n  }\n  addClass(id, _style) {\n    const styleClass = this.classes.get(id) ?? { id, styles: [], textStyles: [] };\n    const styles = _style.replace(/\\\\,/g, \"\\xA7\\xA7\\xA7\").replace(/,/g, \";\").replace(/§§§/g, \",\").split(\";\");\n    if (styles) {\n      styles.forEach((s) => {\n        if (isLabelStyle(s)) {\n          if (styleClass?.textStyles) {\n            styleClass.textStyles.push(s);\n          } else {\n            styleClass.textStyles = [s];\n          }\n        }\n        if (styleClass?.styles) {\n          styleClass.styles.push(s);\n        } else {\n          styleClass.styles = [s];\n        }\n      });\n    }\n    this.classes.set(id, styleClass);\n  }\n  getClasses() {\n    return this.classes;\n  }\n  getStylesForClass(classSelector) {\n    return this.classes.get(classSelector)?.styles ?? [];\n  }\n  clear() {\n    clear();\n    this.nodes = [];\n    this.levels = /* @__PURE__ */ new Map();\n    this.outerNodes = [];\n    this.classes = /* @__PURE__ */ new Map();\n    this.root = void 0;\n  }\n};\n\n// src/diagrams/treemap/parser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/treemap/utils.ts\nfunction buildHierarchy(items) {\n  if (!items.length) {\n    return [];\n  }\n  const root = [];\n  const stack = [];\n  items.forEach((item) => {\n    const node = {\n      name: item.name,\n      children: item.type === \"Leaf\" ? void 0 : []\n    };\n    node.classSelector = item?.classSelector;\n    if (item?.cssCompiledStyles) {\n      node.cssCompiledStyles = [item.cssCompiledStyles];\n    }\n    if (item.type === \"Leaf\" && item.value !== void 0) {\n      node.value = item.value;\n    }\n    while (stack.length > 0 && stack[stack.length - 1].level >= item.level) {\n      stack.pop();\n    }\n    if (stack.length === 0) {\n      root.push(node);\n    } else {\n      const parent = stack[stack.length - 1].node;\n      if (parent.children) {\n        parent.children.push(node);\n      } else {\n        parent.children = [node];\n      }\n    }\n    if (item.type !== \"Leaf\") {\n      stack.push({ node, level: item.level });\n    }\n  });\n  return root;\n}\n__name(buildHierarchy, \"buildHierarchy\");\n\n// src/diagrams/treemap/parser.ts\nvar populate = /* @__PURE__ */ __name((ast, db) => {\n  populateCommonDb(ast, db);\n  const items = [];\n  for (const row of ast.TreemapRows ?? []) {\n    if (row.$type === \"ClassDefStatement\") {\n      db.addClass(row.className ?? \"\", row.styleText ?? \"\");\n    }\n  }\n  for (const row of ast.TreemapRows ?? []) {\n    const item = row.item;\n    if (!item) {\n      continue;\n    }\n    const level = row.indent ? parseInt(row.indent) : 0;\n    const name = getItemName(item);\n    const styles = item.classSelector ? db.getStylesForClass(item.classSelector) : [];\n    const cssCompiledStyles = styles.length > 0 ? styles.join(\";\") : void 0;\n    const itemData = {\n      level,\n      name,\n      type: item.$type,\n      value: item.value,\n      classSelector: item.classSelector,\n      cssCompiledStyles\n    };\n    items.push(itemData);\n  }\n  const hierarchyNodes = buildHierarchy(items);\n  const addNodesRecursively = /* @__PURE__ */ __name((nodes, level) => {\n    for (const node of nodes) {\n      db.addNode(node, level);\n      if (node.children && node.children.length > 0) {\n        addNodesRecursively(node.children, level + 1);\n      }\n    }\n  }, \"addNodesRecursively\");\n  addNodesRecursively(hierarchyNodes, 0);\n}, \"populate\");\nvar getItemName = /* @__PURE__ */ __name((item) => {\n  return item.name ? String(item.name) : \"\";\n}, \"getItemName\");\nvar parser = {\n  // @ts-expect-error - TreeMapDB is not assignable to DiagramDB\n  parser: { yy: void 0 },\n  parse: /* @__PURE__ */ __name(async (text) => {\n    try {\n      const parseFunc = parse;\n      const ast = await parseFunc(\"treemap\", text);\n      log.debug(\"Treemap AST:\", ast);\n      const db = parser.parser?.yy;\n      if (!(db instanceof TreeMapDB)) {\n        throw new Error(\n          \"parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.\"\n        );\n      }\n      populate(ast, db);\n    } catch (error) {\n      log.error(\"Error parsing treemap:\", error);\n      throw error;\n    }\n  }, \"parse\")\n};\n\n// src/diagrams/treemap/renderer.ts\nimport { scaleOrdinal, treemap, hierarchy, format, select } from \"d3\";\nvar DEFAULT_INNER_PADDING = 10;\nvar SECTION_INNER_PADDING = 10;\nvar SECTION_HEADER_HEIGHT = 25;\nvar draw = /* @__PURE__ */ __name((_text, id, _version, diagram2) => {\n  const treemapDb = diagram2.db;\n  const config = treemapDb.getConfig();\n  const treemapInnerPadding = config.padding ?? DEFAULT_INNER_PADDING;\n  const title = treemapDb.getDiagramTitle();\n  const root = treemapDb.getRoot();\n  const { themeVariables } = getConfig();\n  if (!root) {\n    return;\n  }\n  const titleHeight = title ? 30 : 0;\n  const svg = selectSvgElement(id);\n  const width = config.nodeWidth ? config.nodeWidth * SECTION_INNER_PADDING : 960;\n  const height = config.nodeHeight ? config.nodeHeight * SECTION_INNER_PADDING : 500;\n  const svgWidth = width;\n  const svgHeight = height + titleHeight;\n  svg.attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n  let valueFormat;\n  try {\n    const formatStr = config.valueFormat || \",\";\n    if (formatStr === \"$0,0\") {\n      valueFormat = /* @__PURE__ */ __name((value) => \"$\" + format(\",\")(value), \"valueFormat\");\n    } else if (formatStr.startsWith(\"$\") && formatStr.includes(\",\")) {\n      const precision = /\\.\\d+/.exec(formatStr);\n      const precisionStr = precision ? precision[0] : \"\";\n      valueFormat = /* @__PURE__ */ __name((value) => \"$\" + format(\",\" + precisionStr)(value), \"valueFormat\");\n    } else if (formatStr.startsWith(\"$\")) {\n      const restOfFormat = formatStr.substring(1);\n      valueFormat = /* @__PURE__ */ __name((value) => \"$\" + format(restOfFormat || \"\")(value), \"valueFormat\");\n    } else {\n      valueFormat = format(formatStr);\n    }\n  } catch (error) {\n    log.error(\"Error creating format function:\", error);\n    valueFormat = format(\",\");\n  }\n  const colorScale = scaleOrdinal().range([\n    \"transparent\",\n    themeVariables.cScale0,\n    themeVariables.cScale1,\n    themeVariables.cScale2,\n    themeVariables.cScale3,\n    themeVariables.cScale4,\n    themeVariables.cScale5,\n    themeVariables.cScale6,\n    themeVariables.cScale7,\n    themeVariables.cScale8,\n    themeVariables.cScale9,\n    themeVariables.cScale10,\n    themeVariables.cScale11\n  ]);\n  const colorScalePeer = scaleOrdinal().range([\n    \"transparent\",\n    themeVariables.cScalePeer0,\n    themeVariables.cScalePeer1,\n    themeVariables.cScalePeer2,\n    themeVariables.cScalePeer3,\n    themeVariables.cScalePeer4,\n    themeVariables.cScalePeer5,\n    themeVariables.cScalePeer6,\n    themeVariables.cScalePeer7,\n    themeVariables.cScalePeer8,\n    themeVariables.cScalePeer9,\n    themeVariables.cScalePeer10,\n    themeVariables.cScalePeer11\n  ]);\n  const colorScaleLabel = scaleOrdinal().range([\n    themeVariables.cScaleLabel0,\n    themeVariables.cScaleLabel1,\n    themeVariables.cScaleLabel2,\n    themeVariables.cScaleLabel3,\n    themeVariables.cScaleLabel4,\n    themeVariables.cScaleLabel5,\n    themeVariables.cScaleLabel6,\n    themeVariables.cScaleLabel7,\n    themeVariables.cScaleLabel8,\n    themeVariables.cScaleLabel9,\n    themeVariables.cScaleLabel10,\n    themeVariables.cScaleLabel11\n  ]);\n  if (title) {\n    svg.append(\"text\").attr(\"x\", svgWidth / 2).attr(\"y\", titleHeight / 2).attr(\"class\", \"treemapTitle\").attr(\"text-anchor\", \"middle\").attr(\"dominant-baseline\", \"middle\").text(title);\n  }\n  const g = svg.append(\"g\").attr(\"transform\", `translate(0, ${titleHeight})`).attr(\"class\", \"treemapContainer\");\n  const hierarchyRoot = hierarchy(root).sum((d) => d.value ?? 0).sort((a, b) => (b.value ?? 0) - (a.value ?? 0));\n  const treemapLayout = treemap().size([width, height]).paddingTop(\n    (d) => d.children && d.children.length > 0 ? SECTION_HEADER_HEIGHT + SECTION_INNER_PADDING : 0\n  ).paddingInner(treemapInnerPadding).paddingLeft((d) => d.children && d.children.length > 0 ? SECTION_INNER_PADDING : 0).paddingRight((d) => d.children && d.children.length > 0 ? SECTION_INNER_PADDING : 0).paddingBottom((d) => d.children && d.children.length > 0 ? SECTION_INNER_PADDING : 0).round(true);\n  const treemapData = treemapLayout(hierarchyRoot);\n  const branchNodes = treemapData.descendants().filter((d) => d.children && d.children.length > 0);\n  const sections = g.selectAll(\".treemapSection\").data(branchNodes).enter().append(\"g\").attr(\"class\", \"treemapSection\").attr(\"transform\", (d) => `translate(${d.x0},${d.y0})`);\n  sections.append(\"rect\").attr(\"width\", (d) => d.x1 - d.x0).attr(\"height\", SECTION_HEADER_HEIGHT).attr(\"class\", \"treemapSectionHeader\").attr(\"fill\", \"none\").attr(\"fill-opacity\", 0.6).attr(\"stroke-width\", 0.6).attr(\"style\", (d) => {\n    if (d.depth === 0) {\n      return \"display: none;\";\n    }\n    return \"\";\n  });\n  sections.append(\"clipPath\").attr(\"id\", (_d, i) => `clip-section-${id}-${i}`).append(\"rect\").attr(\"width\", (d) => Math.max(0, d.x1 - d.x0 - 12)).attr(\"height\", SECTION_HEADER_HEIGHT);\n  sections.append(\"rect\").attr(\"width\", (d) => d.x1 - d.x0).attr(\"height\", (d) => d.y1 - d.y0).attr(\"class\", (_d, i) => {\n    return `treemapSection section${i}`;\n  }).attr(\"fill\", (d) => colorScale(d.data.name)).attr(\"fill-opacity\", 0.6).attr(\"stroke\", (d) => colorScalePeer(d.data.name)).attr(\"stroke-width\", 2).attr(\"stroke-opacity\", 0.4).attr(\"style\", (d) => {\n    if (d.depth === 0) {\n      return \"display: none;\";\n    }\n    const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n    return styles.nodeStyles + \";\" + styles.borderStyles.join(\";\");\n  });\n  sections.append(\"text\").attr(\"class\", \"treemapSectionLabel\").attr(\"x\", 6).attr(\"y\", SECTION_HEADER_HEIGHT / 2).attr(\"dominant-baseline\", \"middle\").text((d) => d.depth === 0 ? \"\" : d.data.name).attr(\"font-weight\", \"bold\").attr(\"style\", (d) => {\n    if (d.depth === 0) {\n      return \"display: none;\";\n    }\n    const labelStyles = \"dominant-baseline: middle; font-size: 12px; fill:\" + colorScaleLabel(d.data.name) + \"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\";\n    const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n    return labelStyles + styles.labelStyles.replace(\"color:\", \"fill:\");\n  }).each(function(d) {\n    if (d.depth === 0) {\n      return;\n    }\n    const self = select(this);\n    const originalText = d.data.name;\n    self.text(originalText);\n    const totalHeaderWidth = d.x1 - d.x0;\n    const labelXPosition = 6;\n    let spaceForTextContent;\n    if (config.showValues !== false && d.value) {\n      const valueEndsAtXRelative = totalHeaderWidth - 10;\n      const estimatedValueTextActualWidth = 30;\n      const gapBetweenLabelAndValue = 10;\n      const labelMustEndBeforeX = valueEndsAtXRelative - estimatedValueTextActualWidth - gapBetweenLabelAndValue;\n      spaceForTextContent = labelMustEndBeforeX - labelXPosition;\n    } else {\n      const labelOwnRightPadding = 6;\n      spaceForTextContent = totalHeaderWidth - labelXPosition - labelOwnRightPadding;\n    }\n    const minimumWidthToDisplay = 15;\n    const actualAvailableWidth = Math.max(minimumWidthToDisplay, spaceForTextContent);\n    const textNode = self.node();\n    const currentTextContentLength = textNode.getComputedTextLength();\n    if (currentTextContentLength > actualAvailableWidth) {\n      const ellipsis = \"...\";\n      let currentTruncatedText = originalText;\n      while (currentTruncatedText.length > 0) {\n        currentTruncatedText = originalText.substring(0, currentTruncatedText.length - 1);\n        if (currentTruncatedText.length === 0) {\n          self.text(ellipsis);\n          if (textNode.getComputedTextLength() > actualAvailableWidth) {\n            self.text(\"\");\n          }\n          break;\n        }\n        self.text(currentTruncatedText + ellipsis);\n        if (textNode.getComputedTextLength() <= actualAvailableWidth) {\n          break;\n        }\n      }\n    }\n  });\n  if (config.showValues !== false) {\n    sections.append(\"text\").attr(\"class\", \"treemapSectionValue\").attr(\"x\", (d) => d.x1 - d.x0 - 10).attr(\"y\", SECTION_HEADER_HEIGHT / 2).attr(\"text-anchor\", \"end\").attr(\"dominant-baseline\", \"middle\").text((d) => d.value ? valueFormat(d.value) : \"\").attr(\"font-style\", \"italic\").attr(\"style\", (d) => {\n      if (d.depth === 0) {\n        return \"display: none;\";\n      }\n      const labelStyles = \"text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:\" + colorScaleLabel(d.data.name) + \"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\";\n      const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n      return labelStyles + styles.labelStyles.replace(\"color:\", \"fill:\");\n    });\n  }\n  const leafNodes = treemapData.leaves();\n  const cell = g.selectAll(\".treemapLeafGroup\").data(leafNodes).enter().append(\"g\").attr(\"class\", (d, i) => {\n    return `treemapNode treemapLeafGroup leaf${i}${d.data.classSelector ? ` ${d.data.classSelector}` : \"\"}x`;\n  }).attr(\"transform\", (d) => `translate(${d.x0},${d.y0})`);\n  cell.append(\"rect\").attr(\"width\", (d) => d.x1 - d.x0).attr(\"height\", (d) => d.y1 - d.y0).attr(\"class\", \"treemapLeaf\").attr(\"fill\", (d) => {\n    return d.parent ? colorScale(d.parent.data.name) : colorScale(d.data.name);\n  }).attr(\"style\", (d) => {\n    const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n    return styles.nodeStyles;\n  }).attr(\"fill-opacity\", 0.3).attr(\"stroke\", (d) => {\n    return d.parent ? colorScale(d.parent.data.name) : colorScale(d.data.name);\n  }).attr(\"stroke-width\", 3);\n  cell.append(\"clipPath\").attr(\"id\", (_d, i) => `clip-${id}-${i}`).append(\"rect\").attr(\"width\", (d) => Math.max(0, d.x1 - d.x0 - 4)).attr(\"height\", (d) => Math.max(0, d.y1 - d.y0 - 4));\n  const leafLabels = cell.append(\"text\").attr(\"class\", \"treemapLabel\").attr(\"x\", (d) => (d.x1 - d.x0) / 2).attr(\"y\", (d) => (d.y1 - d.y0) / 2).attr(\"style\", (d) => {\n    const labelStyles = \"text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:\" + colorScaleLabel(d.data.name) + \";\";\n    const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n    return labelStyles + styles.labelStyles.replace(\"color:\", \"fill:\");\n  }).attr(\"clip-path\", (_d, i) => `url(#clip-${id}-${i})`).text((d) => d.data.name);\n  leafLabels.each(function(d) {\n    const self = select(this);\n    const nodeWidth = d.x1 - d.x0;\n    const nodeHeight = d.y1 - d.y0;\n    const textNode = self.node();\n    const padding = 4;\n    const availableWidth = nodeWidth - 2 * padding;\n    const availableHeight = nodeHeight - 2 * padding;\n    if (availableWidth < 10 || availableHeight < 10) {\n      self.style(\"display\", \"none\");\n      return;\n    }\n    let currentLabelFontSize = parseInt(self.style(\"font-size\"), 10);\n    const minLabelFontSize = 8;\n    const originalValueRelFontSize = 28;\n    const valueScaleFactor = 0.6;\n    const minValueFontSize = 6;\n    const spacingBetweenLabelAndValue = 2;\n    while (textNode.getComputedTextLength() > availableWidth && currentLabelFontSize > minLabelFontSize) {\n      currentLabelFontSize--;\n      self.style(\"font-size\", `${currentLabelFontSize}px`);\n    }\n    let prospectiveValueFontSize = Math.max(\n      minValueFontSize,\n      Math.min(originalValueRelFontSize, Math.round(currentLabelFontSize * valueScaleFactor))\n    );\n    let combinedHeight = currentLabelFontSize + spacingBetweenLabelAndValue + prospectiveValueFontSize;\n    while (combinedHeight > availableHeight && currentLabelFontSize > minLabelFontSize) {\n      currentLabelFontSize--;\n      prospectiveValueFontSize = Math.max(\n        minValueFontSize,\n        Math.min(originalValueRelFontSize, Math.round(currentLabelFontSize * valueScaleFactor))\n      );\n      if (prospectiveValueFontSize < minValueFontSize && currentLabelFontSize === minLabelFontSize) {\n        break;\n      }\n      self.style(\"font-size\", `${currentLabelFontSize}px`);\n      combinedHeight = currentLabelFontSize + spacingBetweenLabelAndValue + prospectiveValueFontSize;\n      if (prospectiveValueFontSize <= minValueFontSize && combinedHeight > availableHeight) {\n      }\n    }\n    self.style(\"font-size\", `${currentLabelFontSize}px`);\n    if (textNode.getComputedTextLength() > availableWidth || currentLabelFontSize < minLabelFontSize || availableHeight < currentLabelFontSize) {\n      self.style(\"display\", \"none\");\n    }\n  });\n  if (config.showValues !== false) {\n    const leafValues = cell.append(\"text\").attr(\"class\", \"treemapValue\").attr(\"x\", (d) => (d.x1 - d.x0) / 2).attr(\"y\", function(d) {\n      return (d.y1 - d.y0) / 2;\n    }).attr(\"style\", (d) => {\n      const labelStyles = \"text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:\" + colorScaleLabel(d.data.name) + \";\";\n      const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n      return labelStyles + styles.labelStyles.replace(\"color:\", \"fill:\");\n    }).attr(\"clip-path\", (_d, i) => `url(#clip-${id}-${i})`).text((d) => d.value ? valueFormat(d.value) : \"\");\n    leafValues.each(function(d) {\n      const valueTextElement = select(this);\n      const parentCellNode = this.parentNode;\n      if (!parentCellNode) {\n        valueTextElement.style(\"display\", \"none\");\n        return;\n      }\n      const labelElement = select(parentCellNode).select(\".treemapLabel\");\n      if (labelElement.empty() || labelElement.style(\"display\") === \"none\") {\n        valueTextElement.style(\"display\", \"none\");\n        return;\n      }\n      const finalLabelFontSize = parseFloat(labelElement.style(\"font-size\"));\n      const originalValueFontSize = 28;\n      const valueScaleFactor = 0.6;\n      const minValueFontSize = 6;\n      const spacingBetweenLabelAndValue = 2;\n      const actualValueFontSize = Math.max(\n        minValueFontSize,\n        Math.min(originalValueFontSize, Math.round(finalLabelFontSize * valueScaleFactor))\n      );\n      valueTextElement.style(\"font-size\", `${actualValueFontSize}px`);\n      const labelCenterY = (d.y1 - d.y0) / 2;\n      const valueTopActualY = labelCenterY + finalLabelFontSize / 2 + spacingBetweenLabelAndValue;\n      valueTextElement.attr(\"y\", valueTopActualY);\n      const nodeWidth = d.x1 - d.x0;\n      const nodeTotalHeight = d.y1 - d.y0;\n      const cellBottomPadding = 4;\n      const maxValueBottomY = nodeTotalHeight - cellBottomPadding;\n      const availableWidthForValue = nodeWidth - 2 * 4;\n      if (valueTextElement.node().getComputedTextLength() > availableWidthForValue || valueTopActualY + actualValueFontSize > maxValueBottomY || actualValueFontSize < minValueFontSize) {\n        valueTextElement.style(\"display\", \"none\");\n      } else {\n        valueTextElement.style(\"display\", null);\n      }\n    });\n  }\n  const diagramPadding = config.diagramPadding ?? 8;\n  setupViewPortForSVG(svg, diagramPadding, \"flowchart\", config?.useMaxWidth || false);\n}, \"draw\");\nvar getClasses = /* @__PURE__ */ __name(function(_text, diagramObj) {\n  return diagramObj.db.getClasses();\n}, \"getClasses\");\nvar renderer = { draw, getClasses };\n\n// src/diagrams/treemap/styles.ts\nvar defaultTreemapStyleOptions = {\n  sectionStrokeColor: \"black\",\n  sectionStrokeWidth: \"1\",\n  sectionFillColor: \"#efefef\",\n  leafStrokeColor: \"black\",\n  leafStrokeWidth: \"1\",\n  leafFillColor: \"#efefef\",\n  labelColor: \"black\",\n  labelFontSize: \"12px\",\n  valueFontSize: \"10px\",\n  valueColor: \"black\",\n  titleColor: \"black\",\n  titleFontSize: \"14px\"\n};\nvar getStyles = /* @__PURE__ */ __name(({\n  treemap: treemap2\n} = {}) => {\n  const options = cleanAndMerge(defaultTreemapStyleOptions, treemap2);\n  return `\n  .treemapNode.section {\n    stroke: ${options.sectionStrokeColor};\n    stroke-width: ${options.sectionStrokeWidth};\n    fill: ${options.sectionFillColor};\n  }\n  .treemapNode.leaf {\n    stroke: ${options.leafStrokeColor};\n    stroke-width: ${options.leafStrokeWidth};\n    fill: ${options.leafFillColor};\n  }\n  .treemapLabel {\n    fill: ${options.labelColor};\n    font-size: ${options.labelFontSize};\n  }\n  .treemapValue {\n    fill: ${options.valueColor};\n    font-size: ${options.valueFontSize};\n  }\n  .treemapTitle {\n    fill: ${options.titleColor};\n    font-size: ${options.titleFontSize};\n  }\n  `;\n}, \"getStyles\");\nvar styles_default = getStyles;\n\n// src/diagrams/treemap/diagram.ts\nvar diagram = {\n  parser,\n  get db() {\n    return new TreeMapDB();\n  },\n  renderer,\n  styles: styles_default\n};\nexport {\n  diagram\n};\n"],"names":["populateCommonDb","ast","db","_db$setAccDescription","_db$setAccTitle","_db$setDiagramTitle","accDescr","setAccDescription","call","accTitle","setAccTitle","title","setDiagramTitle","__name","setupViewPortForSVG","svg","padding","cssDiagram","useMaxWidth","attr","_calculateDimensionsW","calculateDimensionsWithPadding","width","height","x","y","configureSvgSize","viewBox","createViewBox","log","debug","concat","_svg$node","bounds","node","getBBox","TreeMapDB","_class","_classCallCheck","this","nodes","levels","Map","outerNodes","classes","getAccTitle","getDiagramTitle","getAccDescription","_createClass","key","value","_userConfig$treemap","defaultConfig","defaultConfig_default","userConfig","getConfig","cleanAndMerge","_objectSpread","treemap","level","_this$root","push","set","root","name","children","id","_style","_this$classes$get","styleClass","get","styles","textStyles","replace","split","forEach","s","isLabelStyle","classSelector","_this$classes$get$sty","_this$classes$get2","clear","buildHierarchy","items","length","stack","item","type","cssCompiledStyles","pop","parent","populate","_ast$TreemapRows","_ast$TreemapRows2","_step","_iterator","_createForOfIteratorHelper","TreemapRows","n","done","_row$className","_row$styleText","row","$type","addClass","className","styleText","err","e","f","_step2","_iterator2","indent","parseInt","getItemName","getStylesForClass","join","itemData","hierarchyNodes","addNodesRecursively","_step3","_iterator3","addNode","String","parser","yy","parse","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","text","_parser$parser","parseFunc","wrap","_context","prev","next","sent","Error","t0","error","stop","_x","apply","arguments","SECTION_INNER_PADDING","renderer","draw","_text","_version","diagram2","_config$padding","_config$diagramPaddin","treemapDb","config","treemapInnerPadding","getRoot","themeVariables","valueFormat","titleHeight","selectSvgElement","nodeWidth","nodeHeight","svgWidth","svgHeight","formatStr","format","startsWith","includes","precision","exec","precisionStr","restOfFormat","substring","colorScale","scaleOrdinal","range","cScale0","cScale1","cScale2","cScale3","cScale4","cScale5","cScale6","cScale7","cScale8","cScale9","cScale10","cScale11","colorScalePeer","cScalePeer0","cScalePeer1","cScalePeer2","cScalePeer3","cScalePeer4","cScalePeer5","cScalePeer6","cScalePeer7","cScalePeer8","cScalePeer9","cScalePeer10","cScalePeer11","colorScaleLabel","cScaleLabel0","cScaleLabel1","cScaleLabel2","cScaleLabel3","cScaleLabel4","cScaleLabel5","cScaleLabel6","cScaleLabel7","cScaleLabel8","cScaleLabel9","cScaleLabel10","cScaleLabel11","append","g","hierarchyRoot","hierarchy","sum","d","_d$value","sort","a","b","_b$value","_a$value","treemapData","size","paddingTop","SECTION_HEADER_HEIGHT","paddingInner","paddingLeft","paddingRight","paddingBottom","round","treemapLayout","branchNodes","descendants","filter","sections","selectAll","data","enter","x0","y0","x1","depth","_d","i","Math","max","y1","styles2String","nodeStyles","borderStyles","labelStyles","each","self","select","originalText","spaceForTextContent","totalHeaderWidth","showValues","actualAvailableWidth","textNode","getComputedTextLength","currentTruncatedText","leafNodes","leaves","cell","availableWidth","availableHeight","style","currentLabelFontSize","prospectiveValueFontSize","min","combinedHeight","valueTextElement","parentCellNode","parentNode","labelElement","empty","finalLabelFontSize","parseFloat","actualValueFontSize","valueTopActualY","maxValueBottomY","availableWidthForValue","diagramPadding","getClasses","diagramObj","defaultTreemapStyleOptions","sectionStrokeColor","sectionStrokeWidth","sectionFillColor","leafStrokeColor","leafStrokeWidth","leafFillColor","labelColor","labelFontSize","valueFontSize","valueColor","titleColor","titleFontSize","getStyles","treemap2","undefined","options","diagram"],"sourceRoot":""}